{"version":3,"sources":["api.ts","components/TableItem/TableItem.tsx","components/TableList/TableList.tsx","components/Loader/Loader.tsx","CustomHooks/usePeopleData/usePeopleData.tsx","pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNavLinks/MainNavLinks.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","TableItem","person","slug","useParams","className","classNames","to","sex","name","born","died","mother","motherName","father","fatherName","TableList","persons","map","Loader","sortPersons","find","mom","dad","PeoplePage","useState","dataPersons","setDataPersons","isLoading","setIsLoading","loadError","setLoadError","useEffect","fetchData","loadedPeople","content","useMemo","length","usePeopleData","PageNavLink","text","isActive","MainNavLinks","role","App","path","index","element","createRoot","document","getElementById","render"],"mappings":"kRASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,2BCLYQ,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,OAEQC,EAASC,cAATD,KAER,OACE,qBACE,UAAQ,SACRE,UAAWC,IACT,CAAE,yBAA0BJ,EAAOC,OAASA,IAHhD,UAME,6BACE,cAAC,IAAD,CACEI,GAAE,kBAAaL,EAAOC,MACtBE,UAAWC,IAAW,CAAE,kBAAkC,MAAfJ,EAAOM,MAFpD,SAIGN,EAAOO,SAIZ,6BAAKP,EAAOM,MACZ,6BAAKN,EAAOQ,OACZ,6BAAKR,EAAOS,OACZ,6BACGT,EAAOU,OACN,cAAC,IAAD,CACEP,UAAU,kBACVE,GAAE,kBAAaL,EAAOU,OAAOT,MAF/B,SAIGD,EAAOU,OAAOH,OAEfP,EAAOW,YAAc,MAI3B,6BACGX,EAAOY,OACN,cAAC,IAAD,CAAMP,GAAE,kBAAaL,EAAOY,OAAOX,MAAnC,SACGD,EAAOY,OAAOL,OAEfP,EAAOa,YAAc,QAIhC,EC9CYC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACxC,wBACE,UAAQ,cACRZ,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGY,EAAQC,KAAI,SAAAhB,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOC,KAFG,QAjBiB,ECN7BgB,G,MAAS,kBACpB,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCQtB,SAASe,EAAYH,GACnB,OAAOA,EAAQC,KAAI,SAAAhB,GAAM,kCACpBA,GADoB,IAEvBU,OAAQK,EAAQI,MAAK,SAAAC,GAAG,OAAIA,EAAIb,OAASP,EAAOW,UAAxB,IACxBC,OAAQG,EAAQI,MAAK,SAAAE,GAAG,OAAIA,EAAId,OAASP,EAAOa,UAAxB,KAHD,GAK1B,CAEM,ICfMS,EAAuB,WAClC,MDc2B,WAC3B,MAAsCC,mBAAmB,IAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA0CA,OAxCAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,uHAEazC,IAFb,OAER0C,EAFQ,OAIdP,EAAeP,EAAYc,IAJb,gDAMdH,GAAa,GANC,yBAQdF,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,IA0BI,CAAEE,QAxBoBC,mBAAQ,WACnC,OAAIR,EACK,cAAC,EAAD,IAGLE,EAEA,mBAAG,UAAQ,qBAAqBzB,UAAU,kBAA1C,kCAMAqB,EAAYW,OACP,cAAC,EAAD,CAAWpB,QAASS,IAI3B,mBAAG,UAAQ,kBAAX,8CAIH,GAAE,CAACE,EAAWE,EAAWJ,EAAYW,SAGvC,CC5DqBC,GAAZH,EAAR,EAAQA,QAER,OACE,qCACE,oBAAI9B,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SAAsC8B,QAI7C,ECNYI,EAA+B,SAAC,GAAD,IAAGhC,EAAH,EAAGA,GAAIiC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACEjC,GAAIA,EACJF,UAAW,gBAAGoC,EAAH,EAAGA,SAAH,OAAkBnC,IAC3B,cACA,CAAE,8BAA+BmC,GAFxB,EAFb,SAOGD,GARuC,ECN/BE,EAAyB,kBACpC,qBACE,UAAQ,MACRrC,UAAU,iCACVsC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKtC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaE,GAAG,IAAIiC,KAAK,SACzB,cAAC,EAAD,CAAajC,GAAG,UAAUiC,KAAK,iBAVD,ECGzBI,EAAgB,kBAC3B,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAMvC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOwC,KAAK,SAAZ,UACE,cAAC,IAAD,CACEC,OAAK,EACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACEF,KAAK,QACLE,QAAS,cAAC,EAAD,SAGb,cAAC,IAAD,CACEF,KAAK,IACLE,QAAS,oBAAI1C,UAAU,QAAd,yBAEX,cAAC,IAAD,CAAOwC,KAAK,OAAOE,QAAS,cAAC,IAAD,CAAUxC,GAAG,QACzC,cAAC,IAAD,CACEsC,KAAK,IACLE,QAAS,oBAAI1C,UAAU,QAAd,uCAvBQ,ECE7B2C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.8f7fb371.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const TableItem: React.FC<Props> = ({\n  person,\n}) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': person.slug === slug },\n      )}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`/people/${person.mother.slug}`}\n          >\n            {person.mother.name}\n          </Link>\n        ) : person.motherName || '-'}\n\n      </td>\n\n      <td>\n        {person.father ? (\n          <Link to={`/people/${person.father.slug}`}>\n            {person.father.name}\n          </Link>\n        ) : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TableItem } from '../TableItem';\nimport { Person } from '../../types';\n\ninterface Props {\n  persons: Person[],\n}\n\nexport const TableList: React.FC<Props> = ({ persons }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {persons.map(person => (\n        <TableItem\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useMemo, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { TableList } from '../../components/TableList';\nimport { Loader } from '../../components/Loader';\n\ninterface UsePeopleDataResult {\n  content: JSX.Element;\n}\n\nfunction sortPersons(persons: Person[]) {\n  return persons.map(person => ({\n    ...person,\n    mother: persons.find(mom => mom.name === person.motherName),\n    father: persons.find(dad => dad.name === person.fatherName),\n  }));\n}\n\nexport const usePeopleData = (): UsePeopleDataResult => {\n  const [dataPersons, setDataPersons] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const loadedPeople = await getPeople();\n\n        setDataPersons(sortPersons(loadedPeople));\n      } catch {\n        setLoadError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const content: JSX.Element = useMemo(() => {\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (loadError) {\n      return (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      );\n    }\n\n    if (dataPersons.length) {\n      return <TableList persons={dataPersons} />;\n    }\n\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }, [isLoading, loadError, dataPersons.length]);\n\n  return { content };\n};\n","import React from 'react';\nimport { usePeopleData } from '../CustomHooks/usePeopleData';\n\nexport const PeoplePage: React.FC = () => {\n  const { content } = usePeopleData();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">{content}</div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  text: string,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const MainNavLinks: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { MainNavLinks } from './components/MainNavLinks';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <MainNavLinks />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}